import { useEffect } from 'react'
import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useAccount, useConnect, useEnsName, useDisconnect } from 'wagmi'
import { InjectedConnector } from 'wagmi/connectors/injected'
import Moralis from 'moralis'
import { EvmChain } from '@moralisweb3/common-evm-utils'

const inter = Inter({ subsets: ['latin'] })

const MORALIS_API_KEY = process.env.NEXT_PUBLIC_MORALIS_API_KEY ?? ''

export default function Home() {
  const { address, isConnected } = useAccount()
  const { data: ensName } = useEnsName({ address })
  const { disconnect } = useDisconnect()
  const { connect } = useConnect({
    connector: new InjectedConnector(),
  })

  const runApp = async () => {
    if (!Moralis.Core.isStarted) {
      await Moralis.start({
        apiKey: MORALIS_API_KEY,
      })
    }

    const chain = EvmChain.GOERLI

    if (!address) {
      return
    }

    console.log('getNFTOwners: ', address)

    const response = await Moralis.EvmApi.nft.getWalletNFTs({
      address,
      chain,
    })

    console.log(response.toJSON())
  }

  useEffect(() => {
    if (!isConnected) return
    if (!address) return
    console.log(address)
    runApp()
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [isConnected, address])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.titleCard}>
          <h1>ERC6551</h1>
        </div>
        <div className={styles.contentCard}>
          {isConnected && <p>{ensName ?? address}</p>}
          {!isConnected && <p>not connect</p>}

          {isConnected && <button type="button" onClick={() => disconnect()}>disconnect</button>}
          {!isConnected && <button type="button" onClick={() => connect()}>connect wallet</button>}
        </div>
      </main>
    </>
  )
}
